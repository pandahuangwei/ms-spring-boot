<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ml.mapper.sys.UserDao">

	<sql id="All_Column">
		user_id, username, password, email, mobile, status, creator, create_dt
	</sql>

	<select id="get" resultType="com.ml.entity.sys.User">
		SELECT  <include refid="All_Column"/> FROM sys_user WHERE user_id = #{value}
	</select>
	
	<select id="findList" resultType="com.ml.entity.sys.User">
		SELECT <include refid="All_Column"/> FROM sys_user
		<where>
			<if test="creator != null">
				AND creator = #{creator}
			</if>
			<if test="username != null and username.trim() != ''">
				AND username like concat('%',#{username},'%')
			</if>
		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				ORDER BY ${sidx} ${order}
			</when>
			<otherwise>
				ORDER BY user_id DESC
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<!-- 查询用户的所有权限 -->
	<select id="findAllPerms" resultType="string">
		select m.perms from sys_user_role ur
		LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
		LEFT JOIN sys_menu m on rm.menu_id = m.menu_id
		where ur.user_id = #{userId}
	</select>

	<!-- 查询用户的所有菜单ID -->
	<select id="findAllMenuId" resultType="long">
		select distinct rm.menu_id from sys_user_role ur
		LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
		where ur.user_id = #{userId}
	</select>

	<select id="getByUserName" resultType="com.ml.entity.sys.User">
		SELECT <include refid="All_Column"/> FROM sys_user WHERE username = #{username}
	</select>
	
	<insert id="save" parameterType="com.ml.entity.sys.User" useGeneratedKeys="true" keyProperty="userId">
		INSERT INTO sys_user
            (`user_id`,
             `username`,
             `password`,
             `email`,
             `mobile`,
             `status`,
             `creator`,
             `create_dt`)
		VALUES (#{userId},
				#{username},
				#{password},
				#{email},
				#{mobile},
				#{status},
				#{creator},
				#{createDt}
				)
	</insert>
	 
	<update id="update" parameterType="com.ml.entity.sys.User">
		UPDATE sys_user
		<set> 
			<if test="username != null">`username` = #{username}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="status != null">`status` = #{status}, </if>
		</set>
		WHERE user_id = #{userId}
		<if test="creator != null">
			AND creator = #{creator}
		</if>
	</update>
	
	<update id="updatePassword" parameterType="map">
		UPDATE sys_user
		  SET password = #{newPassword}
		WHERE user_id = #{userId}
		  AND password = #{password}
	</update>
	
	<delete id="deleteBatch">
		DELETE FROM sys_user WHERE user_id in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
		;
		DELETE FROM sys_user_role WHERE user_id in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>


	<select id="queryList" resultType="com.ml.entity.sys.User">
		select * from sys_user_role
		<where>
			<if test="userId != null">
				user_id = #{userId}
			</if>
		</where>
	</select>

	<insert id="saveUserRole">
		insert into sys_user_role
		(
		`user_id`,
		`role_id`
		)
		values
		<foreach collection="roleIdList" item="item" index="index" separator="," >
			(
			#{userId},
			#{item}
			)
		</foreach>
	</insert>

	<delete id="deleteUserRole">
		delete from sys_user_role where user_id = #{value}
	</delete>

	<select id="findRoleIdList" resultType="long">
		select role_id from sys_user_role where user_id = #{value}
	</select>

	<insert id="saveApiUser" parameterType="com.ml.entity.sys.User" useGeneratedKeys="true" keyProperty="userId">
		insert into api_user
		(
		`username`,
		`mobile`,
		`password`,
		`create_dt`
		)
		values
		(
		#{username},
		#{mobile},
		#{password},
		#{createDt}
		)
	</insert>

	<select id="getObject" resultType="com.ml.entity.sys.User">
		select <include refid="All_Column"/> from api_user where user_id = #{value}
	</select>

	<select id="getByMobile" resultType="com.ml.entity.sys.User">
		select <include refid="All_Column"/> from api_user where mobile = #{value}
	</select>


</mapper>